ARM GAS  /tmp/cckj6NTl.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"tfmini.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.__tfmini_calculate_checksum,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	__tfmini_calculate_checksum:
  24              	.LVL0:
  25              	.LFB66:
  26              		.file 1 "Core/Src/tfmini.c"
   1:Core/Src/tfmini.c **** #include "tfmini.h"
   2:Core/Src/tfmini.c **** 
   3:Core/Src/tfmini.c **** static UART_HandleTypeDef tfmini_uart;
   4:Core/Src/tfmini.c **** static struct __tfmini_state __sensor_state;
   5:Core/Src/tfmini.c **** static struct __tfmini_package __tfmini_data;
   6:Core/Src/tfmini.c **** 
   7:Core/Src/tfmini.c **** /**
   8:Core/Src/tfmini.c ****  * Initialize the sensor and the data
   9:Core/Src/tfmini.c ****  */
  10:Core/Src/tfmini.c **** void tfmini_init(void)
  11:Core/Src/tfmini.c **** {
  12:Core/Src/tfmini.c **** 	/* FIXME : define the constants */
  13:Core/Src/tfmini.c **** 	tfmini_uart.Instance = USART2;
  14:Core/Src/tfmini.c **** 	tfmini_uart.Init.BaudRate = 115200;
  15:Core/Src/tfmini.c **** 	tfmini_uart.Init.WordLength = UART_WORDLENGTH_8B;
  16:Core/Src/tfmini.c **** 	tfmini_uart.Init.StopBits = UART_STOPBITS_1;
  17:Core/Src/tfmini.c **** 	tfmini_uart.Init.Parity = UART_PARITY_NONE;
  18:Core/Src/tfmini.c **** 	tfmini_uart.Init.Mode = UART_MODE_TX_RX;
  19:Core/Src/tfmini.c **** 	tfmini_uart.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  20:Core/Src/tfmini.c **** 	tfmini_uart.Init.OverSampling = UART_OVERSAMPLING_16;
  21:Core/Src/tfmini.c **** 	
  22:Core/Src/tfmini.c **** 	/* Handle the errors in configuration */
  23:Core/Src/tfmini.c **** 	if (HAL_UART_Init(&tfmini_uart) != HAL_OK)
  24:Core/Src/tfmini.c **** 	{
  25:Core/Src/tfmini.c **** 		__tfmini_error_handler();
  26:Core/Src/tfmini.c **** 	}
  27:Core/Src/tfmini.c **** }
  28:Core/Src/tfmini.c **** 
  29:Core/Src/tfmini.c **** /**
  30:Core/Src/tfmini.c ****  * Calculating the TFMini checksum
  31:Core/Src/tfmini.c ****  * @param data the data to calculate the checksum from
  32:Core/Src/tfmini.c ****  * @return TFMini-specific checksum
ARM GAS  /tmp/cckj6NTl.s 			page 2


  33:Core/Src/tfmini.c ****  */
  34:Core/Src/tfmini.c **** uint8_t __tfmini_calculate_checksum(uint64_t data) 
  35:Core/Src/tfmini.c **** {
  27              		.loc 1 35 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  36:Core/Src/tfmini.c **** 	uint64_t temp = 0;		/* Temporary container for the sum */
  31              		.loc 1 36 2 view .LVU1
  37:Core/Src/tfmini.c **** 
  38:Core/Src/tfmini.c **** 	/* Calculate the checksum */
  39:Core/Src/tfmini.c **** 	for (uint8_t index = 0; index < 8; ++index)
  32              		.loc 1 39 2 view .LVU2
  33              	.LBB4:
  34              		.loc 1 39 7 view .LVU3
  35              		.loc 1 39 15 is_stmt 0 view .LVU4
  36 0000 0022     		movs	r2, #0
  37              	.LBE4:
  36:Core/Src/tfmini.c **** 	uint64_t temp = 0;		/* Temporary container for the sum */
  38              		.loc 1 36 11 view .LVU5
  39 0002 9446     		mov	ip, r2
  40              	.LVL1:
  41              	.LBB5:
  42              		.loc 1 39 26 is_stmt 1 view .LVU6
  43              		.loc 1 39 2 is_stmt 0 view .LVU7
  44 0004 072A     		cmp	r2, #7
  45 0006 19D8     		bhi	.L8
  46              	.LBE5:
  35:Core/Src/tfmini.c **** 	uint64_t temp = 0;		/* Temporary container for the sum */
  47              		.loc 1 35 1 view .LVU8
  48 0008 10B5     		push	{r4, lr}
  49              	.LCFI0:
  50              		.cfi_def_cfa_offset 8
  51              		.cfi_offset 4, -8
  52              		.cfi_offset 14, -4
  53              	.L3:
  54              	.LBB6:
  40:Core/Src/tfmini.c **** 	{
  41:Core/Src/tfmini.c **** 		temp += (data >> index * 8) & 0xFF; 
  55              		.loc 1 41 3 is_stmt 1 discriminator 3 view .LVU9
  56              		.loc 1 41 26 is_stmt 0 discriminator 3 view .LVU10
  57 000a D300     		lsls	r3, r2, #3
  58              		.loc 1 41 17 discriminator 3 view .LVU11
  59 000c C3F12004 		rsb	r4, r3, #32
  60 0010 A3F1200E 		sub	lr, r3, #32
  61 0014 20FA03F3 		lsr	r3, r0, r3
  62 0018 01FA04F4 		lsl	r4, r1, r4
  63 001c 2343     		orrs	r3, r3, r4
  64 001e 21FA0EFE 		lsr	lr, r1, lr
  65 0022 43EA0E03 		orr	r3, r3, lr
  66              		.loc 1 41 31 discriminator 3 view .LVU12
  67 0026 03F0FF03 		and	r3, r3, #255
  68              		.loc 1 41 8 discriminator 3 view .LVU13
  69 002a 13EB0C0C 		adds	ip, r3, ip
  39:Core/Src/tfmini.c **** 	{
  70              		.loc 1 39 37 is_stmt 1 discriminator 3 view .LVU14
  71 002e 0132     		adds	r2, r2, #1
ARM GAS  /tmp/cckj6NTl.s 			page 3


  72              	.LVL2:
  39:Core/Src/tfmini.c **** 	{
  73              		.loc 1 39 37 is_stmt 0 discriminator 3 view .LVU15
  74 0030 D2B2     		uxtb	r2, r2
  75              	.LVL3:
  39:Core/Src/tfmini.c **** 	{
  76              		.loc 1 39 26 is_stmt 1 discriminator 3 view .LVU16
  39:Core/Src/tfmini.c **** 	{
  77              		.loc 1 39 2 is_stmt 0 discriminator 3 view .LVU17
  78 0032 072A     		cmp	r2, #7
  79 0034 E9D9     		bls	.L3
  80              	.LBE6:
  42:Core/Src/tfmini.c **** 	}
  43:Core/Src/tfmini.c **** 
  44:Core/Src/tfmini.c **** 	/* Return only the lower bits of the checksum */
  45:Core/Src/tfmini.c **** 	return ((temp >> 8) & 0xFF);
  81              		.loc 1 45 2 is_stmt 1 view .LVU18
  46:Core/Src/tfmini.c **** }
  82              		.loc 1 46 1 is_stmt 0 view .LVU19
  83 0036 CCF30720 		ubfx	r0, ip, #8, #8
  84              	.LVL4:
  85              		.loc 1 46 1 view .LVU20
  86 003a 10BD     		pop	{r4, pc}
  87              	.LVL5:
  88              	.L8:
  89              	.LCFI1:
  90              		.cfi_def_cfa_offset 0
  91              		.cfi_restore 4
  92              		.cfi_restore 14
  45:Core/Src/tfmini.c **** }
  93              		.loc 1 45 2 is_stmt 1 view .LVU21
  94              		.loc 1 46 1 is_stmt 0 view .LVU22
  95 003c C2F30720 		ubfx	r0, r2, #8, #8
  96              	.LVL6:
  97              		.loc 1 46 1 view .LVU23
  98 0040 7047     		bx	lr
  99              		.cfi_endproc
 100              	.LFE66:
 102              		.section	.text.__tfmini_error_handler,"ax",%progbits
 103              		.align	1
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu softvfp
 109              	__tfmini_error_handler:
 110              	.LFB68:
  47:Core/Src/tfmini.c **** 
  48:Core/Src/tfmini.c **** /**
  49:Core/Src/tfmini.c ****  * Unpack the data into the internal package to store
  50:Core/Src/tfmini.c ****  * @param data the data from the sensor to unpack
  51:Core/Src/tfmini.c ****  */
  52:Core/Src/tfmini.c **** void __tfmini_unpack(uint64_t data) {
  53:Core/Src/tfmini.c **** 	// Fill the package if the checksum is correct
  54:Core/Src/tfmini.c **** 	__tfmini_data.distance = TFMINI_GET_DIST(data);
  55:Core/Src/tfmini.c **** 	__tfmini_data.strength = TFMINI_GET_STRENGTH(data);
  56:Core/Src/tfmini.c **** 	__tfmini_data.temperature = TFMINI_GET_TEMP(data);
  57:Core/Src/tfmini.c **** }
ARM GAS  /tmp/cckj6NTl.s 			page 4


  58:Core/Src/tfmini.c **** 
  59:Core/Src/tfmini.c **** /**
  60:Core/Src/tfmini.c ****  * Handling the errors of the sensor
  61:Core/Src/tfmini.c ****  */
  62:Core/Src/tfmini.c **** void __tfmini_error_handler(void)
  63:Core/Src/tfmini.c **** {
 111              		.loc 1 63 1 is_stmt 1 view -0
 112              		.cfi_startproc
 113              		@ Volatile: function does not return.
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
  64:Core/Src/tfmini.c **** 	__disable_irq();
 117              		.loc 1 64 2 view .LVU25
 118              	.LBB7:
 119              	.LBI7:
 120              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
ARM GAS  /tmp/cckj6NTl.s 			page 5


  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /tmp/cckj6NTl.s 			page 6


  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 121              		.loc 2 140 27 view .LVU26
 122              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 123              		.loc 2 142 3 view .LVU27
 124              		.syntax unified
 125              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 126 0000 72B6     		cpsid i
 127              	@ 0 "" 2
 128              		.thumb
 129              		.syntax unified
 130              	.L10:
 131              	.LBE8:
 132              	.LBE7:
ARM GAS  /tmp/cckj6NTl.s 			page 7


  65:Core/Src/tfmini.c **** 
  66:Core/Src/tfmini.c **** 	/* Set the status to ERROR and send the error package to the master device */
  67:Core/Src/tfmini.c **** 
  68:Core/Src/tfmini.c **** 	while (1)
 133              		.loc 1 68 2 discriminator 1 view .LVU28
  69:Core/Src/tfmini.c **** 	{}
 134              		.loc 1 69 3 discriminator 1 view .LVU29
  68:Core/Src/tfmini.c **** 	{}
 135              		.loc 1 68 8 discriminator 1 view .LVU30
 136 0002 FEE7     		b	.L10
 137              		.cfi_endproc
 138              	.LFE68:
 140              		.section	.text.tfmini_init,"ax",%progbits
 141              		.align	1
 142              		.global	tfmini_init
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu softvfp
 148              	tfmini_init:
 149              	.LFB65:
  11:Core/Src/tfmini.c **** 	/* FIXME : define the constants */
 150              		.loc 1 11 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154 0000 08B5     		push	{r3, lr}
 155              	.LCFI2:
 156              		.cfi_def_cfa_offset 8
 157              		.cfi_offset 3, -8
 158              		.cfi_offset 14, -4
  13:Core/Src/tfmini.c **** 	tfmini_uart.Init.BaudRate = 115200;
 159              		.loc 1 13 2 view .LVU32
  13:Core/Src/tfmini.c **** 	tfmini_uart.Init.BaudRate = 115200;
 160              		.loc 1 13 23 is_stmt 0 view .LVU33
 161 0002 0A48     		ldr	r0, .L15
 162 0004 0A4B     		ldr	r3, .L15+4
 163 0006 0360     		str	r3, [r0]
  14:Core/Src/tfmini.c **** 	tfmini_uart.Init.WordLength = UART_WORDLENGTH_8B;
 164              		.loc 1 14 2 is_stmt 1 view .LVU34
  14:Core/Src/tfmini.c **** 	tfmini_uart.Init.WordLength = UART_WORDLENGTH_8B;
 165              		.loc 1 14 28 is_stmt 0 view .LVU35
 166 0008 4FF4E133 		mov	r3, #115200
 167 000c 4360     		str	r3, [r0, #4]
  15:Core/Src/tfmini.c **** 	tfmini_uart.Init.StopBits = UART_STOPBITS_1;
 168              		.loc 1 15 2 is_stmt 1 view .LVU36
  15:Core/Src/tfmini.c **** 	tfmini_uart.Init.StopBits = UART_STOPBITS_1;
 169              		.loc 1 15 30 is_stmt 0 view .LVU37
 170 000e 0023     		movs	r3, #0
 171 0010 8360     		str	r3, [r0, #8]
  16:Core/Src/tfmini.c **** 	tfmini_uart.Init.Parity = UART_PARITY_NONE;
 172              		.loc 1 16 2 is_stmt 1 view .LVU38
  16:Core/Src/tfmini.c **** 	tfmini_uart.Init.Parity = UART_PARITY_NONE;
 173              		.loc 1 16 28 is_stmt 0 view .LVU39
 174 0012 C360     		str	r3, [r0, #12]
  17:Core/Src/tfmini.c **** 	tfmini_uart.Init.Mode = UART_MODE_TX_RX;
 175              		.loc 1 17 2 is_stmt 1 view .LVU40
ARM GAS  /tmp/cckj6NTl.s 			page 8


  17:Core/Src/tfmini.c **** 	tfmini_uart.Init.Mode = UART_MODE_TX_RX;
 176              		.loc 1 17 26 is_stmt 0 view .LVU41
 177 0014 0361     		str	r3, [r0, #16]
  18:Core/Src/tfmini.c **** 	tfmini_uart.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 178              		.loc 1 18 2 is_stmt 1 view .LVU42
  18:Core/Src/tfmini.c **** 	tfmini_uart.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 179              		.loc 1 18 24 is_stmt 0 view .LVU43
 180 0016 0C22     		movs	r2, #12
 181 0018 4261     		str	r2, [r0, #20]
  19:Core/Src/tfmini.c **** 	tfmini_uart.Init.OverSampling = UART_OVERSAMPLING_16;
 182              		.loc 1 19 2 is_stmt 1 view .LVU44
  19:Core/Src/tfmini.c **** 	tfmini_uart.Init.OverSampling = UART_OVERSAMPLING_16;
 183              		.loc 1 19 29 is_stmt 0 view .LVU45
 184 001a 8361     		str	r3, [r0, #24]
  20:Core/Src/tfmini.c **** 	
 185              		.loc 1 20 2 is_stmt 1 view .LVU46
  20:Core/Src/tfmini.c **** 	
 186              		.loc 1 20 32 is_stmt 0 view .LVU47
 187 001c C361     		str	r3, [r0, #28]
  23:Core/Src/tfmini.c **** 	{
 188              		.loc 1 23 2 is_stmt 1 view .LVU48
  23:Core/Src/tfmini.c **** 	{
 189              		.loc 1 23 6 is_stmt 0 view .LVU49
 190 001e FFF7FEFF 		bl	HAL_UART_Init
 191              	.LVL7:
  23:Core/Src/tfmini.c **** 	{
 192              		.loc 1 23 5 view .LVU50
 193 0022 00B9     		cbnz	r0, .L14
  27:Core/Src/tfmini.c **** 
 194              		.loc 1 27 1 view .LVU51
 195 0024 08BD     		pop	{r3, pc}
 196              	.L14:
  25:Core/Src/tfmini.c **** 	}
 197              		.loc 1 25 3 is_stmt 1 view .LVU52
 198 0026 FFF7FEFF 		bl	__tfmini_error_handler
 199              	.LVL8:
 200              	.L16:
 201 002a 00BF     		.align	2
 202              	.L15:
 203 002c 00000000 		.word	.LANCHOR0
 204 0030 00440040 		.word	1073759232
 205              		.cfi_endproc
 206              	.LFE65:
 208              		.section	.text.__tfmini_unpack,"ax",%progbits
 209              		.align	1
 210              		.global	__tfmini_unpack
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu softvfp
 216              	__tfmini_unpack:
 217              	.LVL9:
 218              	.LFB67:
  52:Core/Src/tfmini.c **** 	// Fill the package if the checksum is correct
 219              		.loc 1 52 37 view -0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cckj6NTl.s 			page 9


 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              		@ link register save eliminated.
  54:Core/Src/tfmini.c **** 	__tfmini_data.strength = TFMINI_GET_STRENGTH(data);
 224              		.loc 1 54 2 view .LVU54
  54:Core/Src/tfmini.c **** 	__tfmini_data.strength = TFMINI_GET_STRENGTH(data);
 225              		.loc 1 54 27 is_stmt 0 view .LVU55
 226 0000 C1F30721 		ubfx	r1, r1, #8, #8
  54:Core/Src/tfmini.c **** 	__tfmini_data.strength = TFMINI_GET_STRENGTH(data);
 227              		.loc 1 54 25 view .LVU56
 228 0004 034B     		ldr	r3, .L18
 229 0006 1980     		strh	r1, [r3]	@ movhi
  55:Core/Src/tfmini.c **** 	__tfmini_data.temperature = TFMINI_GET_TEMP(data);
 230              		.loc 1 55 2 is_stmt 1 view .LVU57
  55:Core/Src/tfmini.c **** 	__tfmini_data.temperature = TFMINI_GET_TEMP(data);
 231              		.loc 1 55 27 is_stmt 0 view .LVU58
 232 0008 020E     		lsrs	r2, r0, #24
  55:Core/Src/tfmini.c **** 	__tfmini_data.temperature = TFMINI_GET_TEMP(data);
 233              		.loc 1 55 25 view .LVU59
 234 000a 5A80     		strh	r2, [r3, #2]	@ movhi
  56:Core/Src/tfmini.c **** }
 235              		.loc 1 56 2 is_stmt 1 view .LVU60
  56:Core/Src/tfmini.c **** }
 236              		.loc 1 56 30 is_stmt 0 view .LVU61
 237 000c C0F30720 		ubfx	r0, r0, #8, #8
 238              	.LVL10:
  56:Core/Src/tfmini.c **** }
 239              		.loc 1 56 28 view .LVU62
 240 0010 9880     		strh	r0, [r3, #4]	@ movhi
  57:Core/Src/tfmini.c **** 
 241              		.loc 1 57 1 view .LVU63
 242 0012 7047     		bx	lr
 243              	.L19:
 244              		.align	2
 245              	.L18:
 246 0014 00000000 		.word	.LANCHOR1
 247              		.cfi_endproc
 248              	.LFE67:
 250              		.section	.text.tfmini_wait,"ax",%progbits
 251              		.align	1
 252              		.global	tfmini_wait
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 256              		.fpu softvfp
 258              	tfmini_wait:
 259              	.LFB69:
  70:Core/Src/tfmini.c **** }
  71:Core/Src/tfmini.c **** 
  72:Core/Src/tfmini.c **** /**
  73:Core/Src/tfmini.c ****  * Waiting for the package from the sensor
  74:Core/Src/tfmini.c ****  * @return 0 if there was no errors, -1 otherwise
  75:Core/Src/tfmini.c ****  */
  76:Core/Src/tfmini.c **** int8_t tfmini_wait(void)
  77:Core/Src/tfmini.c **** {
 260              		.loc 1 77 1 is_stmt 1 view -0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/cckj6NTl.s 			page 10


 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264 0000 70B5     		push	{r4, r5, r6, lr}
 265              	.LCFI3:
 266              		.cfi_def_cfa_offset 16
 267              		.cfi_offset 4, -16
 268              		.cfi_offset 5, -12
 269              		.cfi_offset 6, -8
 270              		.cfi_offset 14, -4
 271 0002 84B0     		sub	sp, sp, #16
 272              	.LCFI4:
 273              		.cfi_def_cfa_offset 32
 274              	.L21:
  78:Core/Src/tfmini.c **** 	uint64_t data;
 275              		.loc 1 78 2 view .LVU65
  79:Core/Src/tfmini.c **** 	uint8_t checksum;
 276              		.loc 1 79 2 view .LVU66
  80:Core/Src/tfmini.c **** 
  81:Core/Src/tfmini.c **** 	/* FIXME : use the timeout */
  82:Core/Src/tfmini.c **** 	while (1) {
 277              		.loc 1 82 2 view .LVU67
  83:Core/Src/tfmini.c **** 		if (__HAL_UART_GET_FLAG(&tfmini_uart, UART_FLAG_RXNE) == SET) {
 278              		.loc 1 83 3 view .LVU68
 279              		.loc 1 83 7 is_stmt 0 view .LVU69
 280 0004 144B     		ldr	r3, .L25
 281 0006 1B68     		ldr	r3, [r3]
 282 0008 1B68     		ldr	r3, [r3]
 283              		.loc 1 83 6 view .LVU70
 284 000a 13F0200F 		tst	r3, #32
 285 000e F9D0     		beq	.L21
  84:Core/Src/tfmini.c **** 			/* Get data if the timeout is not reached */
  85:Core/Src/tfmini.c **** 			HAL_UART_Receive(&tfmini_uart, &data, 8, 100);
 286              		.loc 1 85 4 is_stmt 1 view .LVU71
 287 0010 114C     		ldr	r4, .L25
 288 0012 6423     		movs	r3, #100
 289 0014 0822     		movs	r2, #8
 290 0016 0DEB0201 		add	r1, sp, r2
 291 001a 2046     		mov	r0, r4
 292 001c FFF7FEFF 		bl	HAL_UART_Receive
 293              	.LVL11:
  86:Core/Src/tfmini.c **** 			HAL_UART_Receive(&tfmini_uart, &checksum, 1, 100);
 294              		.loc 1 86 4 view .LVU72
 295 0020 6423     		movs	r3, #100
 296 0022 0122     		movs	r2, #1
 297 0024 0DF10701 		add	r1, sp, #7
 298 0028 2046     		mov	r0, r4
 299 002a FFF7FEFF 		bl	HAL_UART_Receive
 300              	.LVL12:
  87:Core/Src/tfmini.c **** 
  88:Core/Src/tfmini.c **** 			/* Check if the package is correct by checking the CRC */
  89:Core/Src/tfmini.c **** 			checksum = TFMINI_GET_CHECKSUM(data);
 301              		.loc 1 89 4 view .LVU73
 302              		.loc 1 89 13 is_stmt 0 view .LVU74
 303 002e 029C     		ldr	r4, [sp, #8]
 304 0030 039E     		ldr	r6, [sp, #12]
 305 0032 E5B2     		uxtb	r5, r4
 306 0034 8DF80750 		strb	r5, [sp, #7]
  90:Core/Src/tfmini.c **** 			if (checksum != __tfmini_calculate_checksum(data))
ARM GAS  /tmp/cckj6NTl.s 			page 11


 307              		.loc 1 90 4 is_stmt 1 view .LVU75
 308              		.loc 1 90 20 is_stmt 0 view .LVU76
 309 0038 2046     		mov	r0, r4
 310 003a 3146     		mov	r1, r6
 311 003c FFF7FEFF 		bl	__tfmini_calculate_checksum
 312              	.LVL13:
 313              		.loc 1 90 7 view .LVU77
 314 0040 8542     		cmp	r5, r0
 315 0042 06D1     		bne	.L23
  91:Core/Src/tfmini.c **** 			{
  92:Core/Src/tfmini.c **** 				break;
  93:Core/Src/tfmini.c **** 			}
  94:Core/Src/tfmini.c **** 
  95:Core/Src/tfmini.c **** 			/* Save data to the internal structure */
  96:Core/Src/tfmini.c **** 			__tfmini_unpack(data);
 316              		.loc 1 96 4 is_stmt 1 view .LVU78
 317 0044 2046     		mov	r0, r4
 318 0046 3146     		mov	r1, r6
 319 0048 FFF7FEFF 		bl	__tfmini_unpack
 320              	.LVL14:
  97:Core/Src/tfmini.c **** 
  98:Core/Src/tfmini.c **** 			/* Return 0 as there was no errors so far */
  99:Core/Src/tfmini.c **** 			return 0;
 321              		.loc 1 99 4 view .LVU79
 322              		.loc 1 99 11 is_stmt 0 view .LVU80
 323 004c 0020     		movs	r0, #0
 324              	.L22:
 100:Core/Src/tfmini.c **** 		}
 101:Core/Src/tfmini.c **** 	}
 102:Core/Src/tfmini.c **** 
 103:Core/Src/tfmini.c **** 	/* Call the error handler */
 104:Core/Src/tfmini.c **** 
 105:Core/Src/tfmini.c **** 	/* Indicating an error */
 106:Core/Src/tfmini.c **** 	return -1;
 107:Core/Src/tfmini.c **** }
 325              		.loc 1 107 1 view .LVU81
 326 004e 04B0     		add	sp, sp, #16
 327              	.LCFI5:
 328              		.cfi_remember_state
 329              		.cfi_def_cfa_offset 16
 330              		@ sp needed
 331 0050 70BD     		pop	{r4, r5, r6, pc}
 332              	.L23:
 333              	.LCFI6:
 334              		.cfi_restore_state
 106:Core/Src/tfmini.c **** }
 335              		.loc 1 106 9 view .LVU82
 336 0052 4FF0FF30 		mov	r0, #-1
 337 0056 FAE7     		b	.L22
 338              	.L26:
 339              		.align	2
 340              	.L25:
 341 0058 00000000 		.word	.LANCHOR0
 342              		.cfi_endproc
 343              	.LFE69:
 345              		.section	.text.tfmini_get_sensor_status,"ax",%progbits
 346              		.align	1
ARM GAS  /tmp/cckj6NTl.s 			page 12


 347              		.global	tfmini_get_sensor_status
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 351              		.fpu softvfp
 353              	tfmini_get_sensor_status:
 354              	.LFB70:
 108:Core/Src/tfmini.c **** 
 109:Core/Src/tfmini.c **** /**
 110:Core/Src/tfmini.c ****  * Getting the current status of the sensor
 111:Core/Src/tfmini.c ****  * @return the status of the sensor
 112:Core/Src/tfmini.c ****  */
 113:Core/Src/tfmini.c **** uint8_t tfmini_get_sensor_status(void)
 114:Core/Src/tfmini.c **** {
 355              		.loc 1 114 1 is_stmt 1 view -0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359              		@ link register save eliminated.
 115:Core/Src/tfmini.c **** 	return __sensor_state.status;
 360              		.loc 1 115 2 view .LVU84
 116:Core/Src/tfmini.c **** }
 361              		.loc 1 116 1 is_stmt 0 view .LVU85
 362 0000 014B     		ldr	r3, .L28
 363 0002 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 364 0004 7047     		bx	lr
 365              	.L29:
 366 0006 00BF     		.align	2
 367              	.L28:
 368 0008 00000000 		.word	.LANCHOR2
 369              		.cfi_endproc
 370              	.LFE70:
 372              		.section	.text.tfmini_sensor_reset,"ax",%progbits
 373              		.align	1
 374              		.global	tfmini_sensor_reset
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu softvfp
 380              	tfmini_sensor_reset:
 381              	.LFB71:
 117:Core/Src/tfmini.c **** 
 118:Core/Src/tfmini.c **** /**
 119:Core/Src/tfmini.c ****  * Reset the sensor parameters
 120:Core/Src/tfmini.c ****  */
 121:Core/Src/tfmini.c **** void tfmini_sensor_reset(void)
 122:Core/Src/tfmini.c **** {
 382              		.loc 1 122 1 is_stmt 1 view -0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 123:Core/Src/tfmini.c **** 
 124:Core/Src/tfmini.c **** }
 387              		.loc 1 124 1 view .LVU87
 388 0000 7047     		bx	lr
 389              		.cfi_endproc
ARM GAS  /tmp/cckj6NTl.s 			page 13


 390              	.LFE71:
 392              		.section	.text.tfmini_get_sample_rate,"ax",%progbits
 393              		.align	1
 394              		.global	tfmini_get_sample_rate
 395              		.syntax unified
 396              		.thumb
 397              		.thumb_func
 398              		.fpu softvfp
 400              	tfmini_get_sample_rate:
 401              	.LFB72:
 125:Core/Src/tfmini.c **** 
 126:Core/Src/tfmini.c **** /**
 127:Core/Src/tfmini.c ****  * Getting the sample rate of the sensor
 128:Core/Src/tfmini.c ****  * @return the sample rate of the sensor
 129:Core/Src/tfmini.c ****  */
 130:Core/Src/tfmini.c **** uint16_t tfmini_get_sample_rate(void) {
 402              		.loc 1 130 39 view -0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406              		@ link register save eliminated.
 131:Core/Src/tfmini.c **** 	return __sensor_state.sample_rate;
 407              		.loc 1 131 2 view .LVU89
 132:Core/Src/tfmini.c **** }
 408              		.loc 1 132 1 is_stmt 0 view .LVU90
 409 0000 014B     		ldr	r3, .L32
 410 0002 9888     		ldrh	r0, [r3, #4]
 411 0004 7047     		bx	lr
 412              	.L33:
 413 0006 00BF     		.align	2
 414              	.L32:
 415 0008 00000000 		.word	.LANCHOR2
 416              		.cfi_endproc
 417              	.LFE72:
 419              		.section	.text.tfmini_set_sample_rate,"ax",%progbits
 420              		.align	1
 421              		.global	tfmini_set_sample_rate
 422              		.syntax unified
 423              		.thumb
 424              		.thumb_func
 425              		.fpu softvfp
 427              	tfmini_set_sample_rate:
 428              	.LVL15:
 429              	.LFB73:
 133:Core/Src/tfmini.c **** 
 134:Core/Src/tfmini.c **** /**
 135:Core/Src/tfmini.c ****  * Setting the sample rate of the sensor
 136:Core/Src/tfmini.c ****  * @param value the sample rate of the sensor
 137:Core/Src/tfmini.c ****  */
 138:Core/Src/tfmini.c **** void tfmini_set_sample_rate(uint16_t value) 
 139:Core/Src/tfmini.c **** {
 430              		.loc 1 139 1 is_stmt 1 view -0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 140:Core/Src/tfmini.c **** 	/* Send the corresponding command to the device */
ARM GAS  /tmp/cckj6NTl.s 			page 14


 141:Core/Src/tfmini.c **** 	/* FIXME */
 142:Core/Src/tfmini.c **** 
 143:Core/Src/tfmini.c **** 	/* Update internal struct data */
 144:Core/Src/tfmini.c **** 	 __sensor_state.sample_rate = value;
 435              		.loc 1 144 3 view .LVU92
 436              		.loc 1 144 30 is_stmt 0 view .LVU93
 437 0000 014B     		ldr	r3, .L35
 438 0002 9880     		strh	r0, [r3, #4]	@ movhi
 145:Core/Src/tfmini.c **** }
 439              		.loc 1 145 1 view .LVU94
 440 0004 7047     		bx	lr
 441              	.L36:
 442 0006 00BF     		.align	2
 443              	.L35:
 444 0008 00000000 		.word	.LANCHOR2
 445              		.cfi_endproc
 446              	.LFE73:
 448              		.section	.text.tfmini_set_mode,"ax",%progbits
 449              		.align	1
 450              		.global	tfmini_set_mode
 451              		.syntax unified
 452              		.thumb
 453              		.thumb_func
 454              		.fpu softvfp
 456              	tfmini_set_mode:
 457              	.LVL16:
 458              	.LFB74:
 146:Core/Src/tfmini.c **** 
 147:Core/Src/tfmini.c **** /**
 148:Core/Src/tfmini.c ****  * Setting the mode of the sensor
 149:Core/Src/tfmini.c ****  * @param value the mode
 150:Core/Src/tfmini.c ****  */
 151:Core/Src/tfmini.c **** void tfmini_set_mode(uint8_t value)
 152:Core/Src/tfmini.c **** {
 459              		.loc 1 152 1 is_stmt 1 view -0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 0
 462              		@ frame_needed = 0, uses_anonymous_args = 0
 463              		@ link register save eliminated.
 153:Core/Src/tfmini.c **** 	/* Send the corresponding command to the device */
 154:Core/Src/tfmini.c **** 	/* FIXME */
 155:Core/Src/tfmini.c **** 
 156:Core/Src/tfmini.c **** 	/* Update internal struct data */
 157:Core/Src/tfmini.c **** 	 __sensor_state.mode = value;
 464              		.loc 1 157 3 view .LVU96
 465              		.loc 1 157 23 is_stmt 0 view .LVU97
 466 0000 014B     		ldr	r3, .L38
 467 0002 1870     		strb	r0, [r3]
 158:Core/Src/tfmini.c **** }
 468              		.loc 1 158 1 view .LVU98
 469 0004 7047     		bx	lr
 470              	.L39:
 471 0006 00BF     		.align	2
 472              	.L38:
 473 0008 00000000 		.word	.LANCHOR2
 474              		.cfi_endproc
 475              	.LFE74:
ARM GAS  /tmp/cckj6NTl.s 			page 15


 477              		.section	.text.tfmini_get_mode,"ax",%progbits
 478              		.align	1
 479              		.global	tfmini_get_mode
 480              		.syntax unified
 481              		.thumb
 482              		.thumb_func
 483              		.fpu softvfp
 485              	tfmini_get_mode:
 486              	.LFB75:
 159:Core/Src/tfmini.c **** 
 160:Core/Src/tfmini.c **** /**
 161:Core/Src/tfmini.c ****  * Getting the mode of the sensor
 162:Core/Src/tfmini.c ****  * @return the mode
 163:Core/Src/tfmini.c ****  */
 164:Core/Src/tfmini.c **** uint8_t tfmini_get_mode(void)
 165:Core/Src/tfmini.c **** {
 487              		.loc 1 165 1 is_stmt 1 view -0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              		@ link register save eliminated.
 166:Core/Src/tfmini.c **** 	return __sensor_state.mode;
 492              		.loc 1 166 2 view .LVU100
 167:Core/Src/tfmini.c **** }
 493              		.loc 1 167 1 is_stmt 0 view .LVU101
 494 0000 014B     		ldr	r3, .L41
 495 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 496 0004 7047     		bx	lr
 497              	.L42:
 498 0006 00BF     		.align	2
 499              	.L41:
 500 0008 00000000 		.word	.LANCHOR2
 501              		.cfi_endproc
 502              	.LFE75:
 504              		.section	.text.tfmini_get_max_distance,"ax",%progbits
 505              		.align	1
 506              		.global	tfmini_get_max_distance
 507              		.syntax unified
 508              		.thumb
 509              		.thumb_func
 510              		.fpu softvfp
 512              	tfmini_get_max_distance:
 513              	.LFB76:
 168:Core/Src/tfmini.c **** 
 169:Core/Src/tfmini.c **** /**
 170:Core/Src/tfmini.c ****  * Getting the maximum distance of the sensor
 171:Core/Src/tfmini.c ****  * @return the max distance
 172:Core/Src/tfmini.c ****  */
 173:Core/Src/tfmini.c **** uint8_t tfmini_get_max_distance(void)
 174:Core/Src/tfmini.c **** {
 514              		.loc 1 174 1 is_stmt 1 view -0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              		@ link register save eliminated.
 175:Core/Src/tfmini.c **** 	return __sensor_state.max_distance;
 519              		.loc 1 175 2 view .LVU103
ARM GAS  /tmp/cckj6NTl.s 			page 16


 176:Core/Src/tfmini.c **** }
 520              		.loc 1 176 1 is_stmt 0 view .LVU104
 521 0000 014B     		ldr	r3, .L44
 522 0002 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 523 0004 7047     		bx	lr
 524              	.L45:
 525 0006 00BF     		.align	2
 526              	.L44:
 527 0008 00000000 		.word	.LANCHOR2
 528              		.cfi_endproc
 529              	.LFE76:
 531              		.section	.text.tfmini_set_max_distance,"ax",%progbits
 532              		.align	1
 533              		.global	tfmini_set_max_distance
 534              		.syntax unified
 535              		.thumb
 536              		.thumb_func
 537              		.fpu softvfp
 539              	tfmini_set_max_distance:
 540              	.LVL17:
 541              	.LFB77:
 177:Core/Src/tfmini.c **** 
 178:Core/Src/tfmini.c **** /**
 179:Core/Src/tfmini.c ****  * Setting the maximum distance of the sensor
 180:Core/Src/tfmini.c ****  * @param value the max distance
 181:Core/Src/tfmini.c ****  */
 182:Core/Src/tfmini.c **** void tfmini_set_max_distance(uint16_t value)
 183:Core/Src/tfmini.c **** {
 542              		.loc 1 183 1 is_stmt 1 view -0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 0
 545              		@ frame_needed = 0, uses_anonymous_args = 0
 546              		@ link register save eliminated.
 184:Core/Src/tfmini.c **** 	/* Send the corresponding command to the device */
 185:Core/Src/tfmini.c **** 	/* FIXME */
 186:Core/Src/tfmini.c **** 
 187:Core/Src/tfmini.c **** 	/* Update internal struct data */
 188:Core/Src/tfmini.c **** 	 __sensor_state.max_distance = value;
 547              		.loc 1 188 3 view .LVU106
 548              		.loc 1 188 31 is_stmt 0 view .LVU107
 549 0000 014B     		ldr	r3, .L47
 550 0002 5880     		strh	r0, [r3, #2]	@ movhi
 189:Core/Src/tfmini.c **** }...
 551              		.loc 1 189 1 view .LVU108
 552 0004 7047     		bx	lr
 553              	.L48:
 554 0006 00BF     		.align	2
 555              	.L47:
 556 0008 00000000 		.word	.LANCHOR2
 557              		.cfi_endproc
 558              	.LFE77:
 560              		.section	.bss.__sensor_state,"aw",%nobits
 561              		.align	2
 562              		.set	.LANCHOR2,. + 0
 565              	__sensor_state:
 566 0000 00000000 		.space	8
 566      00000000 
ARM GAS  /tmp/cckj6NTl.s 			page 17


 567              		.section	.bss.__tfmini_data,"aw",%nobits
 568              		.align	2
 569              		.set	.LANCHOR1,. + 0
 572              	__tfmini_data:
 573 0000 00000000 		.space	6
 573      0000
 574              		.section	.bss.tfmini_uart,"aw",%nobits
 575              		.align	2
 576              		.set	.LANCHOR0,. + 0
 579              	tfmini_uart:
 580 0000 00000000 		.space	64
 580      00000000 
 580      00000000 
 580      00000000 
 580      00000000 
 581              		.text
 582              	.Letext0:
 583              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 584              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 585              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 586              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 587              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 588              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 589              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 590              		.file 10 "Core/Inc/tfmini.h"
ARM GAS  /tmp/cckj6NTl.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tfmini.c
     /tmp/cckj6NTl.s:16     .text.__tfmini_calculate_checksum:0000000000000000 $t
     /tmp/cckj6NTl.s:23     .text.__tfmini_calculate_checksum:0000000000000000 __tfmini_calculate_checksum
     /tmp/cckj6NTl.s:103    .text.__tfmini_error_handler:0000000000000000 $t
     /tmp/cckj6NTl.s:109    .text.__tfmini_error_handler:0000000000000000 __tfmini_error_handler
     /tmp/cckj6NTl.s:141    .text.tfmini_init:0000000000000000 $t
     /tmp/cckj6NTl.s:148    .text.tfmini_init:0000000000000000 tfmini_init
     /tmp/cckj6NTl.s:203    .text.tfmini_init:000000000000002c $d
     /tmp/cckj6NTl.s:209    .text.__tfmini_unpack:0000000000000000 $t
     /tmp/cckj6NTl.s:216    .text.__tfmini_unpack:0000000000000000 __tfmini_unpack
     /tmp/cckj6NTl.s:246    .text.__tfmini_unpack:0000000000000014 $d
     /tmp/cckj6NTl.s:251    .text.tfmini_wait:0000000000000000 $t
     /tmp/cckj6NTl.s:258    .text.tfmini_wait:0000000000000000 tfmini_wait
     /tmp/cckj6NTl.s:341    .text.tfmini_wait:0000000000000058 $d
     /tmp/cckj6NTl.s:346    .text.tfmini_get_sensor_status:0000000000000000 $t
     /tmp/cckj6NTl.s:353    .text.tfmini_get_sensor_status:0000000000000000 tfmini_get_sensor_status
     /tmp/cckj6NTl.s:368    .text.tfmini_get_sensor_status:0000000000000008 $d
     /tmp/cckj6NTl.s:373    .text.tfmini_sensor_reset:0000000000000000 $t
     /tmp/cckj6NTl.s:380    .text.tfmini_sensor_reset:0000000000000000 tfmini_sensor_reset
     /tmp/cckj6NTl.s:393    .text.tfmini_get_sample_rate:0000000000000000 $t
     /tmp/cckj6NTl.s:400    .text.tfmini_get_sample_rate:0000000000000000 tfmini_get_sample_rate
     /tmp/cckj6NTl.s:415    .text.tfmini_get_sample_rate:0000000000000008 $d
     /tmp/cckj6NTl.s:420    .text.tfmini_set_sample_rate:0000000000000000 $t
     /tmp/cckj6NTl.s:427    .text.tfmini_set_sample_rate:0000000000000000 tfmini_set_sample_rate
     /tmp/cckj6NTl.s:444    .text.tfmini_set_sample_rate:0000000000000008 $d
     /tmp/cckj6NTl.s:449    .text.tfmini_set_mode:0000000000000000 $t
     /tmp/cckj6NTl.s:456    .text.tfmini_set_mode:0000000000000000 tfmini_set_mode
     /tmp/cckj6NTl.s:473    .text.tfmini_set_mode:0000000000000008 $d
     /tmp/cckj6NTl.s:478    .text.tfmini_get_mode:0000000000000000 $t
     /tmp/cckj6NTl.s:485    .text.tfmini_get_mode:0000000000000000 tfmini_get_mode
     /tmp/cckj6NTl.s:500    .text.tfmini_get_mode:0000000000000008 $d
     /tmp/cckj6NTl.s:505    .text.tfmini_get_max_distance:0000000000000000 $t
     /tmp/cckj6NTl.s:512    .text.tfmini_get_max_distance:0000000000000000 tfmini_get_max_distance
     /tmp/cckj6NTl.s:527    .text.tfmini_get_max_distance:0000000000000008 $d
     /tmp/cckj6NTl.s:532    .text.tfmini_set_max_distance:0000000000000000 $t
     /tmp/cckj6NTl.s:539    .text.tfmini_set_max_distance:0000000000000000 tfmini_set_max_distance
     /tmp/cckj6NTl.s:556    .text.tfmini_set_max_distance:0000000000000008 $d
     /tmp/cckj6NTl.s:561    .bss.__sensor_state:0000000000000000 $d
     /tmp/cckj6NTl.s:565    .bss.__sensor_state:0000000000000000 __sensor_state
     /tmp/cckj6NTl.s:568    .bss.__tfmini_data:0000000000000000 $d
     /tmp/cckj6NTl.s:572    .bss.__tfmini_data:0000000000000000 __tfmini_data
     /tmp/cckj6NTl.s:575    .bss.tfmini_uart:0000000000000000 $d
     /tmp/cckj6NTl.s:579    .bss.tfmini_uart:0000000000000000 tfmini_uart

UNDEFINED SYMBOLS
HAL_UART_Init
HAL_UART_Receive
