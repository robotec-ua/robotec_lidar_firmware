ARM GAS  /tmp/ccu2a7fG.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB71:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /**
   2:Core/Src/main.c **** 	******************************************************************************
   3:Core/Src/main.c **** 	* @file					 : main.c
   4:Core/Src/main.c **** 	* @brief					: Main program body
   5:Core/Src/main.c **** 	******************************************************************************
   6:Core/Src/main.c **** 	* @attention
   7:Core/Src/main.c **** 	*
   8:Core/Src/main.c **** 	* <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
   9:Core/Src/main.c **** 	* All rights reserved.</center></h2>
  10:Core/Src/main.c **** 	*
  11:Core/Src/main.c **** 	* This software component is licensed by ST under BSD 3-Clause license,
  12:Core/Src/main.c **** 	* the "License"; You may not use this file except in compliance with the
  13:Core/Src/main.c **** 	* License. You may obtain a copy of the License at:
  14:Core/Src/main.c **** 	*												opensource.org/licenses/BSD-3-Clause
  15:Core/Src/main.c **** 	*
  16:Core/Src/main.c **** 	******************************************************************************
  17:Core/Src/main.c **** 	*/
  18:Core/Src/main.c **** 
  19:Core/Src/main.c **** #include "main.h"
  20:Core/Src/main.c **** 
  21:Core/Src/main.c **** CRC_HandleTypeDef hcrc;
  22:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  23:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  24:Core/Src/main.c **** UART_HandleTypeDef uart_out;
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** unsigned int address = 0x01;
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** void SystemClock_Config(void);
  29:Core/Src/main.c **** static void MX_GPIO_Init(void);
  30:Core/Src/main.c **** static void MX_CRC_Init(void);
  31:Core/Src/main.c **** static void MX_I2C1_Init(void);
  32:Core/Src/main.c **** static void MX_SPI1_Init(void);
  33:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
ARM GAS  /tmp/ccu2a7fG.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /*Device section*/
  36:Core/Src/main.c **** uint8_t send_status(void);
  37:Core/Src/main.c **** void halt(void);
  38:Core/Src/main.c **** uint16_t get_address(void);
  39:Core/Src/main.c **** void set_address(uint16_t value);
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /*Motor section*/
  42:Core/Src/main.c **** /*FIXME : move to motor.h*/
  43:Core/Src/main.c **** uint16_t get_rotation_angle(void);
  44:Core/Src/main.c **** void set_rotation_angle(uint8_t value);
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /**
  47:Core/Src/main.c ****  * @brief The application entry point.
  48:Core/Src/main.c ****  * @retval int
  49:Core/Src/main.c ****  */
  50:Core/Src/main.c **** int main(void)
  51:Core/Src/main.c **** {
  52:Core/Src/main.c **** 	package received_package;
  53:Core/Src/main.c **** 	unsigned long lidar_package;
  54:Core/Src/main.c **** 	uint8_t command = 0;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** 	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  57:Core/Src/main.c **** 	HAL_Init();
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** 	/* Configure the system clock */
  60:Core/Src/main.c **** 	SystemClock_Config();
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** 	/* Initialize all configured peripherals */
  63:Core/Src/main.c **** 	MX_GPIO_Init();
  64:Core/Src/main.c **** 	MX_CRC_Init();
  65:Core/Src/main.c **** 	MX_I2C1_Init();
  66:Core/Src/main.c **** 	MX_SPI1_Init();
  67:Core/Src/main.c **** 	MX_USART1_UART_Init();
  68:Core/Src/main.c **** 	tfmini_init();
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** 	while (1)
  71:Core/Src/main.c **** 	{
  72:Core/Src/main.c **** 		/* If there is a transfer on the line, receive the command */
  73:Core/Src/main.c **** 		if (__HAL_UART_GET_FLAG(&uart_out, UART_FLAG_RXNE) == SET)
  74:Core/Src/main.c **** 		{
  75:Core/Src/main.c **** 			received_package = get_package(&uart_out);
  76:Core/Src/main.c **** 		}
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** 		/* Check if the address is correct */
  79:Core/Src/main.c **** 		if (address != received_package.address)
  80:Core/Src/main.c **** 		{
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** 		}
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** 		/* Check if the CRC is correct */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** 		/* Decode the command */
  87:Core/Src/main.c **** 		switch (received_package.command) {
  88:Core/Src/main.c **** 			case CMD_STATUS_CHECK:
  89:Core/Src/main.c **** 				/*send_status();*/
  90:Core/Src/main.c **** 				break;
ARM GAS  /tmp/ccu2a7fG.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** 			case CMD_SENSOR_STATUS_CHECK:
  93:Core/Src/main.c **** 				/*send_sensor_status();*/
  94:Core/Src/main.c **** 				break;
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** 			case CMD_HALT:
  97:Core/Src/main.c **** 				/*halt();*/
  98:Core/Src/main.c **** 				break;
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** 			case CMD_RESET:
 101:Core/Src/main.c **** 				/*sensor_reset();*/
 102:Core/Src/main.c **** 				break;
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** 			case CMD_GET_SAMPLE_RATE:
 105:Core/Src/main.c **** 				/*get_sample_rate();*/
 106:Core/Src/main.c **** 				break;
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** 			case CMD_SET_SAMPLE_RATE:
 109:Core/Src/main.c **** 				/*set_sample_rate();*/
 110:Core/Src/main.c **** 				break;
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** 			case CMD_SET_MODE:
 113:Core/Src/main.c **** 				/*set_mode();*/
 114:Core/Src/main.c **** 				break;
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** 			case CMD_GET_MAX_DIST:
 117:Core/Src/main.c **** 				/*get_max_distance();*/
 118:Core/Src/main.c **** 				break;
 119:Core/Src/main.c **** 
 120:Core/Src/main.c **** 			case CMD_SET_MAX_DIST:
 121:Core/Src/main.c **** 				/*set_max_distance();*/
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** 			case CMD_GET_ROT_ANGLE:
 124:Core/Src/main.c **** 				/*get_rotation_angle();*/
 125:Core/Src/main.c **** 				break;
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** 			case CMD_SET_ROT_ANGLE:
 128:Core/Src/main.c **** 				/*set_rotation_angle();*/
 129:Core/Src/main.c **** 				break;
 130:Core/Src/main.c **** 
 131:Core/Src/main.c **** 			case CMD_GET_ADDR:
 132:Core/Src/main.c **** 				/*get_address();*/
 133:Core/Src/main.c **** 				break;
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** 			case CMD_SET_ADDR:
 136:Core/Src/main.c **** 				/*set_address();*/
 137:Core/Src/main.c **** 				break;
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** 			default :
 140:Core/Src/main.c **** 				/* TODO */
 141:Core/Src/main.c **** 				break;
 142:Core/Src/main.c **** 		}
 143:Core/Src/main.c **** 
 144:Core/Src/main.c **** 		/*Reset the command*/
 145:Core/Src/main.c **** 		command = 0;
 146:Core/Src/main.c **** 	}
 147:Core/Src/main.c **** }
ARM GAS  /tmp/ccu2a7fG.s 			page 4


 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** /**
 150:Core/Src/main.c ****  * @brief System Clock Configuration
 151:Core/Src/main.c ****  * @retval None
 152:Core/Src/main.c ****  */
 153:Core/Src/main.c **** void SystemClock_Config(void)
 154:Core/Src/main.c **** {
 155:Core/Src/main.c **** 	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 156:Core/Src/main.c **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** 	/** Initializes the RCC Oscillators according to the specified parameters
 159:Core/Src/main.c **** 	* in the RCC_OscInitTypeDef structure.
 160:Core/Src/main.c **** 	*/
 161:Core/Src/main.c **** 	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 162:Core/Src/main.c **** 	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 163:Core/Src/main.c **** 	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 164:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 165:Core/Src/main.c **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 166:Core/Src/main.c **** 	{
 167:Core/Src/main.c **** 		Error_Handler();
 168:Core/Src/main.c **** 	}
 169:Core/Src/main.c **** 	/** Initializes the CPU, AHB and APB buses clocks
 170:Core/Src/main.c **** 	*/
 171:Core/Src/main.c **** 	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 172:Core/Src/main.c **** 															|RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 173:Core/Src/main.c **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 174:Core/Src/main.c **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 175:Core/Src/main.c **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 176:Core/Src/main.c **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 177:Core/Src/main.c **** 
 178:Core/Src/main.c **** 	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 179:Core/Src/main.c **** 	{
 180:Core/Src/main.c **** 		Error_Handler();
 181:Core/Src/main.c **** 	}
 182:Core/Src/main.c **** }
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** /**
 185:Core/Src/main.c ****  * @brief CRC Initialization Function
 186:Core/Src/main.c ****  * @param None
 187:Core/Src/main.c ****  * @retval None
 188:Core/Src/main.c ****  */
 189:Core/Src/main.c **** static void MX_CRC_Init(void)
 190:Core/Src/main.c **** {
 191:Core/Src/main.c **** 	hcrc.Instance = CRC;
 192:Core/Src/main.c **** 	if (HAL_CRC_Init(&hcrc) != HAL_OK)
 193:Core/Src/main.c **** 	{
 194:Core/Src/main.c **** 		Error_Handler();
 195:Core/Src/main.c **** 	}
 196:Core/Src/main.c **** }
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** /**
 199:Core/Src/main.c ****  * @brief I2C1 Initialization Function
 200:Core/Src/main.c ****  * @param None
 201:Core/Src/main.c ****  * @retval None
 202:Core/Src/main.c ****  */
 203:Core/Src/main.c **** static void MX_I2C1_Init(void)
 204:Core/Src/main.c **** {
ARM GAS  /tmp/ccu2a7fG.s 			page 5


 205:Core/Src/main.c **** 	hi2c1.Instance = I2C1;
 206:Core/Src/main.c **** 	hi2c1.Init.ClockSpeed = 100000;
 207:Core/Src/main.c **** 	hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 208:Core/Src/main.c **** 	hi2c1.Init.OwnAddress1 = 0;
 209:Core/Src/main.c **** 	hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 210:Core/Src/main.c **** 	hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 211:Core/Src/main.c **** 	hi2c1.Init.OwnAddress2 = 0;
 212:Core/Src/main.c **** 	hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 213:Core/Src/main.c **** 	hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 214:Core/Src/main.c **** 	if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 215:Core/Src/main.c **** 	{
 216:Core/Src/main.c **** 		Error_Handler();
 217:Core/Src/main.c **** 	}
 218:Core/Src/main.c **** }
 219:Core/Src/main.c **** 
 220:Core/Src/main.c **** /**
 221:Core/Src/main.c ****  * @brief SPI1 Initialization Function
 222:Core/Src/main.c ****  * @param None
 223:Core/Src/main.c ****  * @retval None
 224:Core/Src/main.c ****  */
 225:Core/Src/main.c **** static void MX_SPI1_Init(void)
 226:Core/Src/main.c **** {
 227:Core/Src/main.c **** 	/* SPI1 parameter configuration*/
 228:Core/Src/main.c **** 	hspi1.Instance = SPI1;
 229:Core/Src/main.c **** 	hspi1.Init.Mode = SPI_MODE_MASTER;
 230:Core/Src/main.c **** 	hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 231:Core/Src/main.c **** 	hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 232:Core/Src/main.c **** 	hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 233:Core/Src/main.c **** 	hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 234:Core/Src/main.c **** 	hspi1.Init.NSS = SPI_NSS_SOFT;
 235:Core/Src/main.c **** 	hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 236:Core/Src/main.c **** 	hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 237:Core/Src/main.c **** 	hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 238:Core/Src/main.c **** 	hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 239:Core/Src/main.c **** 	hspi1.Init.CRCPolynomial = 10;
 240:Core/Src/main.c **** 	if (HAL_SPI_Init(&hspi1) != HAL_OK)
 241:Core/Src/main.c **** 	{
 242:Core/Src/main.c **** 		Error_Handler();
 243:Core/Src/main.c **** 	}
 244:Core/Src/main.c **** }
 245:Core/Src/main.c **** 
 246:Core/Src/main.c **** /**
 247:Core/Src/main.c ****  * @brief USART1 Initialization Function
 248:Core/Src/main.c ****  * @param None
 249:Core/Src/main.c ****  * @retval None
 250:Core/Src/main.c ****  */
 251:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 252:Core/Src/main.c **** {
 253:Core/Src/main.c **** 	uart_out.Instance = USART1;
 254:Core/Src/main.c **** 	uart_out.Init.BaudRate = 115200;
 255:Core/Src/main.c **** 	uart_out.Init.WordLength = UART_WORDLENGTH_8B;
 256:Core/Src/main.c **** 	uart_out.Init.StopBits = UART_STOPBITS_1;
 257:Core/Src/main.c **** 	uart_out.Init.Parity = UART_PARITY_NONE;
 258:Core/Src/main.c **** 	uart_out.Init.Mode = UART_MODE_TX_RX;
 259:Core/Src/main.c **** 	uart_out.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 260:Core/Src/main.c **** 	uart_out.Init.OverSampling = UART_OVERSAMPLING_16;
 261:Core/Src/main.c **** 	if (HAL_UART_Init(&uart_out) != HAL_OK)
ARM GAS  /tmp/ccu2a7fG.s 			page 6


 262:Core/Src/main.c **** 	{
 263:Core/Src/main.c **** 		Error_Handler();
 264:Core/Src/main.c **** 	}
 265:Core/Src/main.c **** }
 266:Core/Src/main.c **** 
 267:Core/Src/main.c **** /**
 268:Core/Src/main.c ****  * @brief GPIO Initialization Function
 269:Core/Src/main.c ****  * @param None
 270:Core/Src/main.c ****  * @retval None
 271:Core/Src/main.c ****  */
 272:Core/Src/main.c **** static void MX_GPIO_Init(void)
 273:Core/Src/main.c **** {
  26              		.loc 1 273 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
 274:Core/Src/main.c **** 	/* GPIO Ports Clock Enable */
 275:Core/Src/main.c **** 	__HAL_RCC_GPIOA_CLK_ENABLE();
  34              		.loc 1 275 2 view .LVU1
  35              	.LBB4:
  36              		.loc 1 275 2 view .LVU2
  37              		.loc 1 275 2 view .LVU3
  38 0002 0A4B     		ldr	r3, .L3
  39 0004 9A69     		ldr	r2, [r3, #24]
  40 0006 42F00402 		orr	r2, r2, #4
  41 000a 9A61     		str	r2, [r3, #24]
  42              		.loc 1 275 2 view .LVU4
  43 000c 9A69     		ldr	r2, [r3, #24]
  44 000e 02F00402 		and	r2, r2, #4
  45 0012 0092     		str	r2, [sp]
  46              		.loc 1 275 2 view .LVU5
  47 0014 009A     		ldr	r2, [sp]
  48              	.LBE4:
  49              		.loc 1 275 2 view .LVU6
 276:Core/Src/main.c **** 	__HAL_RCC_GPIOB_CLK_ENABLE();
  50              		.loc 1 276 2 view .LVU7
  51              	.LBB5:
  52              		.loc 1 276 2 view .LVU8
  53              		.loc 1 276 2 view .LVU9
  54 0016 9A69     		ldr	r2, [r3, #24]
  55 0018 42F00802 		orr	r2, r2, #8
  56 001c 9A61     		str	r2, [r3, #24]
  57              		.loc 1 276 2 view .LVU10
  58 001e 9B69     		ldr	r3, [r3, #24]
  59 0020 03F00803 		and	r3, r3, #8
  60 0024 0193     		str	r3, [sp, #4]
  61              		.loc 1 276 2 view .LVU11
  62 0026 019B     		ldr	r3, [sp, #4]
  63              	.LBE5:
  64              		.loc 1 276 2 view .LVU12
 277:Core/Src/main.c **** }
  65              		.loc 1 277 1 is_stmt 0 view .LVU13
  66 0028 02B0     		add	sp, sp, #8
ARM GAS  /tmp/ccu2a7fG.s 			page 7


  67              	.LCFI1:
  68              		.cfi_def_cfa_offset 0
  69              		@ sp needed
  70 002a 7047     		bx	lr
  71              	.L4:
  72              		.align	2
  73              	.L3:
  74 002c 00100240 		.word	1073876992
  75              		.cfi_endproc
  76              	.LFE71:
  78              		.section	.text.Error_Handler,"ax",%progbits
  79              		.align	1
  80              		.global	Error_Handler
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu softvfp
  86              	Error_Handler:
  87              	.LFB72:
 278:Core/Src/main.c **** 
 279:Core/Src/main.c **** /**
 280:Core/Src/main.c ****  * @brief	This function is executed in case of error occurrence.
 281:Core/Src/main.c ****  * @retval None
 282:Core/Src/main.c ****  */
 283:Core/Src/main.c **** void Error_Handler(void)
 284:Core/Src/main.c **** {
  88              		.loc 1 284 1 is_stmt 1 view -0
  89              		.cfi_startproc
  90              		@ Volatile: function does not return.
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
 285:Core/Src/main.c **** 	/* User can add his own implementation to report the HAL error return state */
 286:Core/Src/main.c **** 	__disable_irq();
  94              		.loc 1 286 2 view .LVU15
  95              	.LBB6:
  96              	.LBI6:
  97              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  /tmp/ccu2a7fG.s 			page 8


  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  /tmp/ccu2a7fG.s 			page 9


  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccu2a7fG.s 			page 10


 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  98              		.loc 2 140 27 view .LVU16
  99              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 100              		.loc 2 142 3 view .LVU17
 101              		.syntax unified
 102              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 103 0000 72B6     		cpsid i
 104              	@ 0 "" 2
 105              		.thumb
 106              		.syntax unified
 107              	.L6:
 108              	.LBE7:
 109              	.LBE6:
 287:Core/Src/main.c **** 	while (1)
 110              		.loc 1 287 2 discriminator 1 view .LVU18
 288:Core/Src/main.c **** 	{
 289:Core/Src/main.c **** 	}
 111              		.loc 1 289 2 discriminator 1 view .LVU19
 287:Core/Src/main.c **** 	while (1)
 112              		.loc 1 287 8 discriminator 1 view .LVU20
 113 0002 FEE7     		b	.L6
 114              		.cfi_endproc
 115              	.LFE72:
 117              		.section	.text.MX_CRC_Init,"ax",%progbits
 118              		.align	1
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu softvfp
 124              	MX_CRC_Init:
 125              	.LFB67:
 190:Core/Src/main.c **** 	hcrc.Instance = CRC;
 126              		.loc 1 190 1 view -0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130 0000 08B5     		push	{r3, lr}
 131              	.LCFI2:
 132              		.cfi_def_cfa_offset 8
 133              		.cfi_offset 3, -8
 134              		.cfi_offset 14, -4
 191:Core/Src/main.c **** 	if (HAL_CRC_Init(&hcrc) != HAL_OK)
 135              		.loc 1 191 2 view .LVU22
 191:Core/Src/main.c **** 	if (HAL_CRC_Init(&hcrc) != HAL_OK)
 136              		.loc 1 191 16 is_stmt 0 view .LVU23
 137 0002 0448     		ldr	r0, .L11
 138 0004 044B     		ldr	r3, .L11+4
 139 0006 0360     		str	r3, [r0]
 192:Core/Src/main.c **** 	{
ARM GAS  /tmp/ccu2a7fG.s 			page 11


 140              		.loc 1 192 2 is_stmt 1 view .LVU24
 192:Core/Src/main.c **** 	{
 141              		.loc 1 192 6 is_stmt 0 view .LVU25
 142 0008 FFF7FEFF 		bl	HAL_CRC_Init
 143              	.LVL0:
 192:Core/Src/main.c **** 	{
 144              		.loc 1 192 5 view .LVU26
 145 000c 00B9     		cbnz	r0, .L10
 196:Core/Src/main.c **** 
 146              		.loc 1 196 1 view .LVU27
 147 000e 08BD     		pop	{r3, pc}
 148              	.L10:
 194:Core/Src/main.c **** 	}
 149              		.loc 1 194 3 is_stmt 1 view .LVU28
 150 0010 FFF7FEFF 		bl	Error_Handler
 151              	.LVL1:
 152              	.L12:
 153              		.align	2
 154              	.L11:
 155 0014 00000000 		.word	.LANCHOR0
 156 0018 00300240 		.word	1073885184
 157              		.cfi_endproc
 158              	.LFE67:
 160              		.section	.text.MX_I2C1_Init,"ax",%progbits
 161              		.align	1
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu softvfp
 167              	MX_I2C1_Init:
 168              	.LFB68:
 204:Core/Src/main.c **** 	hi2c1.Instance = I2C1;
 169              		.loc 1 204 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173 0000 08B5     		push	{r3, lr}
 174              	.LCFI3:
 175              		.cfi_def_cfa_offset 8
 176              		.cfi_offset 3, -8
 177              		.cfi_offset 14, -4
 205:Core/Src/main.c **** 	hi2c1.Init.ClockSpeed = 100000;
 178              		.loc 1 205 2 view .LVU30
 205:Core/Src/main.c **** 	hi2c1.Init.ClockSpeed = 100000;
 179              		.loc 1 205 17 is_stmt 0 view .LVU31
 180 0002 0A48     		ldr	r0, .L17
 181 0004 0A4B     		ldr	r3, .L17+4
 182 0006 0360     		str	r3, [r0]
 206:Core/Src/main.c **** 	hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 183              		.loc 1 206 2 is_stmt 1 view .LVU32
 206:Core/Src/main.c **** 	hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 184              		.loc 1 206 24 is_stmt 0 view .LVU33
 185 0008 0A4B     		ldr	r3, .L17+8
 186 000a 4360     		str	r3, [r0, #4]
 207:Core/Src/main.c **** 	hi2c1.Init.OwnAddress1 = 0;
 187              		.loc 1 207 2 is_stmt 1 view .LVU34
 207:Core/Src/main.c **** 	hi2c1.Init.OwnAddress1 = 0;
ARM GAS  /tmp/ccu2a7fG.s 			page 12


 188              		.loc 1 207 23 is_stmt 0 view .LVU35
 189 000c 0023     		movs	r3, #0
 190 000e 8360     		str	r3, [r0, #8]
 208:Core/Src/main.c **** 	hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 191              		.loc 1 208 2 is_stmt 1 view .LVU36
 208:Core/Src/main.c **** 	hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 192              		.loc 1 208 25 is_stmt 0 view .LVU37
 193 0010 C360     		str	r3, [r0, #12]
 209:Core/Src/main.c **** 	hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 194              		.loc 1 209 2 is_stmt 1 view .LVU38
 209:Core/Src/main.c **** 	hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 195              		.loc 1 209 28 is_stmt 0 view .LVU39
 196 0012 4FF48042 		mov	r2, #16384
 197 0016 0261     		str	r2, [r0, #16]
 210:Core/Src/main.c **** 	hi2c1.Init.OwnAddress2 = 0;
 198              		.loc 1 210 2 is_stmt 1 view .LVU40
 210:Core/Src/main.c **** 	hi2c1.Init.OwnAddress2 = 0;
 199              		.loc 1 210 29 is_stmt 0 view .LVU41
 200 0018 4361     		str	r3, [r0, #20]
 211:Core/Src/main.c **** 	hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 201              		.loc 1 211 2 is_stmt 1 view .LVU42
 211:Core/Src/main.c **** 	hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 202              		.loc 1 211 25 is_stmt 0 view .LVU43
 203 001a 8361     		str	r3, [r0, #24]
 212:Core/Src/main.c **** 	hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 204              		.loc 1 212 2 is_stmt 1 view .LVU44
 212:Core/Src/main.c **** 	hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 205              		.loc 1 212 29 is_stmt 0 view .LVU45
 206 001c C361     		str	r3, [r0, #28]
 213:Core/Src/main.c **** 	if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 207              		.loc 1 213 2 is_stmt 1 view .LVU46
 213:Core/Src/main.c **** 	if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 208              		.loc 1 213 27 is_stmt 0 view .LVU47
 209 001e 0362     		str	r3, [r0, #32]
 214:Core/Src/main.c **** 	{
 210              		.loc 1 214 2 is_stmt 1 view .LVU48
 214:Core/Src/main.c **** 	{
 211              		.loc 1 214 6 is_stmt 0 view .LVU49
 212 0020 FFF7FEFF 		bl	HAL_I2C_Init
 213              	.LVL2:
 214:Core/Src/main.c **** 	{
 214              		.loc 1 214 5 view .LVU50
 215 0024 00B9     		cbnz	r0, .L16
 218:Core/Src/main.c **** 
 216              		.loc 1 218 1 view .LVU51
 217 0026 08BD     		pop	{r3, pc}
 218              	.L16:
 216:Core/Src/main.c **** 	}
 219              		.loc 1 216 3 is_stmt 1 view .LVU52
 220 0028 FFF7FEFF 		bl	Error_Handler
 221              	.LVL3:
 222              	.L18:
 223              		.align	2
 224              	.L17:
 225 002c 00000000 		.word	.LANCHOR1
 226 0030 00540040 		.word	1073763328
 227 0034 A0860100 		.word	100000
ARM GAS  /tmp/ccu2a7fG.s 			page 13


 228              		.cfi_endproc
 229              	.LFE68:
 231              		.section	.text.MX_SPI1_Init,"ax",%progbits
 232              		.align	1
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 236              		.fpu softvfp
 238              	MX_SPI1_Init:
 239              	.LFB69:
 226:Core/Src/main.c **** 	/* SPI1 parameter configuration*/
 240              		.loc 1 226 1 view -0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244 0000 08B5     		push	{r3, lr}
 245              	.LCFI4:
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 3, -8
 248              		.cfi_offset 14, -4
 228:Core/Src/main.c **** 	hspi1.Init.Mode = SPI_MODE_MASTER;
 249              		.loc 1 228 2 view .LVU54
 228:Core/Src/main.c **** 	hspi1.Init.Mode = SPI_MODE_MASTER;
 250              		.loc 1 228 17 is_stmt 0 view .LVU55
 251 0002 0D48     		ldr	r0, .L23
 252 0004 0D4B     		ldr	r3, .L23+4
 253 0006 0360     		str	r3, [r0]
 229:Core/Src/main.c **** 	hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 254              		.loc 1 229 2 is_stmt 1 view .LVU56
 229:Core/Src/main.c **** 	hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 255              		.loc 1 229 18 is_stmt 0 view .LVU57
 256 0008 4FF48273 		mov	r3, #260
 257 000c 4360     		str	r3, [r0, #4]
 230:Core/Src/main.c **** 	hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 258              		.loc 1 230 2 is_stmt 1 view .LVU58
 230:Core/Src/main.c **** 	hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 259              		.loc 1 230 23 is_stmt 0 view .LVU59
 260 000e 0023     		movs	r3, #0
 261 0010 8360     		str	r3, [r0, #8]
 231:Core/Src/main.c **** 	hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 262              		.loc 1 231 2 is_stmt 1 view .LVU60
 231:Core/Src/main.c **** 	hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 263              		.loc 1 231 22 is_stmt 0 view .LVU61
 264 0012 C360     		str	r3, [r0, #12]
 232:Core/Src/main.c **** 	hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 265              		.loc 1 232 2 is_stmt 1 view .LVU62
 232:Core/Src/main.c **** 	hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 266              		.loc 1 232 25 is_stmt 0 view .LVU63
 267 0014 0361     		str	r3, [r0, #16]
 233:Core/Src/main.c **** 	hspi1.Init.NSS = SPI_NSS_SOFT;
 268              		.loc 1 233 2 is_stmt 1 view .LVU64
 233:Core/Src/main.c **** 	hspi1.Init.NSS = SPI_NSS_SOFT;
 269              		.loc 1 233 22 is_stmt 0 view .LVU65
 270 0016 4361     		str	r3, [r0, #20]
 234:Core/Src/main.c **** 	hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 271              		.loc 1 234 2 is_stmt 1 view .LVU66
 234:Core/Src/main.c **** 	hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
ARM GAS  /tmp/ccu2a7fG.s 			page 14


 272              		.loc 1 234 17 is_stmt 0 view .LVU67
 273 0018 4FF40072 		mov	r2, #512
 274 001c 8261     		str	r2, [r0, #24]
 235:Core/Src/main.c **** 	hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 275              		.loc 1 235 2 is_stmt 1 view .LVU68
 235:Core/Src/main.c **** 	hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 276              		.loc 1 235 31 is_stmt 0 view .LVU69
 277 001e C361     		str	r3, [r0, #28]
 236:Core/Src/main.c **** 	hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 278              		.loc 1 236 2 is_stmt 1 view .LVU70
 236:Core/Src/main.c **** 	hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 279              		.loc 1 236 22 is_stmt 0 view .LVU71
 280 0020 0362     		str	r3, [r0, #32]
 237:Core/Src/main.c **** 	hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 281              		.loc 1 237 2 is_stmt 1 view .LVU72
 237:Core/Src/main.c **** 	hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 282              		.loc 1 237 20 is_stmt 0 view .LVU73
 283 0022 4362     		str	r3, [r0, #36]
 238:Core/Src/main.c **** 	hspi1.Init.CRCPolynomial = 10;
 284              		.loc 1 238 2 is_stmt 1 view .LVU74
 238:Core/Src/main.c **** 	hspi1.Init.CRCPolynomial = 10;
 285              		.loc 1 238 28 is_stmt 0 view .LVU75
 286 0024 8362     		str	r3, [r0, #40]
 239:Core/Src/main.c **** 	if (HAL_SPI_Init(&hspi1) != HAL_OK)
 287              		.loc 1 239 2 is_stmt 1 view .LVU76
 239:Core/Src/main.c **** 	if (HAL_SPI_Init(&hspi1) != HAL_OK)
 288              		.loc 1 239 27 is_stmt 0 view .LVU77
 289 0026 0A23     		movs	r3, #10
 290 0028 C362     		str	r3, [r0, #44]
 240:Core/Src/main.c **** 	{
 291              		.loc 1 240 2 is_stmt 1 view .LVU78
 240:Core/Src/main.c **** 	{
 292              		.loc 1 240 6 is_stmt 0 view .LVU79
 293 002a FFF7FEFF 		bl	HAL_SPI_Init
 294              	.LVL4:
 240:Core/Src/main.c **** 	{
 295              		.loc 1 240 5 view .LVU80
 296 002e 00B9     		cbnz	r0, .L22
 244:Core/Src/main.c **** 
 297              		.loc 1 244 1 view .LVU81
 298 0030 08BD     		pop	{r3, pc}
 299              	.L22:
 242:Core/Src/main.c **** 	}
 300              		.loc 1 242 3 is_stmt 1 view .LVU82
 301 0032 FFF7FEFF 		bl	Error_Handler
 302              	.LVL5:
 303              	.L24:
 304 0036 00BF     		.align	2
 305              	.L23:
 306 0038 00000000 		.word	.LANCHOR2
 307 003c 00300140 		.word	1073819648
 308              		.cfi_endproc
 309              	.LFE69:
 311              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 312              		.align	1
 313              		.syntax unified
 314              		.thumb
ARM GAS  /tmp/ccu2a7fG.s 			page 15


 315              		.thumb_func
 316              		.fpu softvfp
 318              	MX_USART1_UART_Init:
 319              	.LFB70:
 252:Core/Src/main.c **** 	uart_out.Instance = USART1;
 320              		.loc 1 252 1 view -0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324 0000 08B5     		push	{r3, lr}
 325              	.LCFI5:
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 3, -8
 328              		.cfi_offset 14, -4
 253:Core/Src/main.c **** 	uart_out.Init.BaudRate = 115200;
 329              		.loc 1 253 2 view .LVU84
 253:Core/Src/main.c **** 	uart_out.Init.BaudRate = 115200;
 330              		.loc 1 253 20 is_stmt 0 view .LVU85
 331 0002 0A48     		ldr	r0, .L29
 332 0004 0A4B     		ldr	r3, .L29+4
 333 0006 0360     		str	r3, [r0]
 254:Core/Src/main.c **** 	uart_out.Init.WordLength = UART_WORDLENGTH_8B;
 334              		.loc 1 254 2 is_stmt 1 view .LVU86
 254:Core/Src/main.c **** 	uart_out.Init.WordLength = UART_WORDLENGTH_8B;
 335              		.loc 1 254 25 is_stmt 0 view .LVU87
 336 0008 4FF4E133 		mov	r3, #115200
 337 000c 4360     		str	r3, [r0, #4]
 255:Core/Src/main.c **** 	uart_out.Init.StopBits = UART_STOPBITS_1;
 338              		.loc 1 255 2 is_stmt 1 view .LVU88
 255:Core/Src/main.c **** 	uart_out.Init.StopBits = UART_STOPBITS_1;
 339              		.loc 1 255 27 is_stmt 0 view .LVU89
 340 000e 0023     		movs	r3, #0
 341 0010 8360     		str	r3, [r0, #8]
 256:Core/Src/main.c **** 	uart_out.Init.Parity = UART_PARITY_NONE;
 342              		.loc 1 256 2 is_stmt 1 view .LVU90
 256:Core/Src/main.c **** 	uart_out.Init.Parity = UART_PARITY_NONE;
 343              		.loc 1 256 25 is_stmt 0 view .LVU91
 344 0012 C360     		str	r3, [r0, #12]
 257:Core/Src/main.c **** 	uart_out.Init.Mode = UART_MODE_TX_RX;
 345              		.loc 1 257 2 is_stmt 1 view .LVU92
 257:Core/Src/main.c **** 	uart_out.Init.Mode = UART_MODE_TX_RX;
 346              		.loc 1 257 23 is_stmt 0 view .LVU93
 347 0014 0361     		str	r3, [r0, #16]
 258:Core/Src/main.c **** 	uart_out.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 348              		.loc 1 258 2 is_stmt 1 view .LVU94
 258:Core/Src/main.c **** 	uart_out.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 349              		.loc 1 258 21 is_stmt 0 view .LVU95
 350 0016 0C22     		movs	r2, #12
 351 0018 4261     		str	r2, [r0, #20]
 259:Core/Src/main.c **** 	uart_out.Init.OverSampling = UART_OVERSAMPLING_16;
 352              		.loc 1 259 2 is_stmt 1 view .LVU96
 259:Core/Src/main.c **** 	uart_out.Init.OverSampling = UART_OVERSAMPLING_16;
 353              		.loc 1 259 26 is_stmt 0 view .LVU97
 354 001a 8361     		str	r3, [r0, #24]
 260:Core/Src/main.c **** 	if (HAL_UART_Init(&uart_out) != HAL_OK)
 355              		.loc 1 260 2 is_stmt 1 view .LVU98
 260:Core/Src/main.c **** 	if (HAL_UART_Init(&uart_out) != HAL_OK)
ARM GAS  /tmp/ccu2a7fG.s 			page 16


 356              		.loc 1 260 29 is_stmt 0 view .LVU99
 357 001c C361     		str	r3, [r0, #28]
 261:Core/Src/main.c **** 	{
 358              		.loc 1 261 2 is_stmt 1 view .LVU100
 261:Core/Src/main.c **** 	{
 359              		.loc 1 261 6 is_stmt 0 view .LVU101
 360 001e FFF7FEFF 		bl	HAL_UART_Init
 361              	.LVL6:
 261:Core/Src/main.c **** 	{
 362              		.loc 1 261 5 view .LVU102
 363 0022 00B9     		cbnz	r0, .L28
 265:Core/Src/main.c **** 
 364              		.loc 1 265 1 view .LVU103
 365 0024 08BD     		pop	{r3, pc}
 366              	.L28:
 263:Core/Src/main.c **** 	}
 367              		.loc 1 263 3 is_stmt 1 view .LVU104
 368 0026 FFF7FEFF 		bl	Error_Handler
 369              	.LVL7:
 370              	.L30:
 371 002a 00BF     		.align	2
 372              	.L29:
 373 002c 00000000 		.word	.LANCHOR3
 374 0030 00380140 		.word	1073821696
 375              		.cfi_endproc
 376              	.LFE70:
 378              		.section	.text.SystemClock_Config,"ax",%progbits
 379              		.align	1
 380              		.global	SystemClock_Config
 381              		.syntax unified
 382              		.thumb
 383              		.thumb_func
 384              		.fpu softvfp
 386              	SystemClock_Config:
 387              	.LFB66:
 154:Core/Src/main.c **** 	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 388              		.loc 1 154 1 view -0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 64
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392 0000 00B5     		push	{lr}
 393              	.LCFI6:
 394              		.cfi_def_cfa_offset 4
 395              		.cfi_offset 14, -4
 396 0002 91B0     		sub	sp, sp, #68
 397              	.LCFI7:
 398              		.cfi_def_cfa_offset 72
 155:Core/Src/main.c **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 399              		.loc 1 155 2 view .LVU106
 155:Core/Src/main.c **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 400              		.loc 1 155 21 is_stmt 0 view .LVU107
 401 0004 2822     		movs	r2, #40
 402 0006 0021     		movs	r1, #0
 403 0008 06A8     		add	r0, sp, #24
 404 000a FFF7FEFF 		bl	memset
 405              	.LVL8:
 156:Core/Src/main.c **** 
ARM GAS  /tmp/ccu2a7fG.s 			page 17


 406              		.loc 1 156 2 is_stmt 1 view .LVU108
 156:Core/Src/main.c **** 
 407              		.loc 1 156 21 is_stmt 0 view .LVU109
 408 000e 0023     		movs	r3, #0
 409 0010 0193     		str	r3, [sp, #4]
 410 0012 0293     		str	r3, [sp, #8]
 411 0014 0393     		str	r3, [sp, #12]
 412 0016 0493     		str	r3, [sp, #16]
 413 0018 0593     		str	r3, [sp, #20]
 161:Core/Src/main.c **** 	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 414              		.loc 1 161 2 is_stmt 1 view .LVU110
 161:Core/Src/main.c **** 	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 415              		.loc 1 161 35 is_stmt 0 view .LVU111
 416 001a 0223     		movs	r3, #2
 417 001c 0693     		str	r3, [sp, #24]
 162:Core/Src/main.c **** 	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 418              		.loc 1 162 2 is_stmt 1 view .LVU112
 162:Core/Src/main.c **** 	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 419              		.loc 1 162 29 is_stmt 0 view .LVU113
 420 001e 0123     		movs	r3, #1
 421 0020 0A93     		str	r3, [sp, #40]
 163:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 422              		.loc 1 163 2 is_stmt 1 view .LVU114
 163:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 423              		.loc 1 163 40 is_stmt 0 view .LVU115
 424 0022 1023     		movs	r3, #16
 425 0024 0B93     		str	r3, [sp, #44]
 164:Core/Src/main.c **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 426              		.loc 1 164 2 is_stmt 1 view .LVU116
 165:Core/Src/main.c **** 	{
 427              		.loc 1 165 2 view .LVU117
 165:Core/Src/main.c **** 	{
 428              		.loc 1 165 6 is_stmt 0 view .LVU118
 429 0026 06A8     		add	r0, sp, #24
 430 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 431              	.LVL9:
 165:Core/Src/main.c **** 	{
 432              		.loc 1 165 5 view .LVU119
 433 002c 68B9     		cbnz	r0, .L35
 171:Core/Src/main.c **** 															|RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 434              		.loc 1 171 2 is_stmt 1 view .LVU120
 171:Core/Src/main.c **** 															|RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 435              		.loc 1 171 30 is_stmt 0 view .LVU121
 436 002e 0F23     		movs	r3, #15
 437 0030 0193     		str	r3, [sp, #4]
 173:Core/Src/main.c **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 438              		.loc 1 173 2 is_stmt 1 view .LVU122
 173:Core/Src/main.c **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 439              		.loc 1 173 33 is_stmt 0 view .LVU123
 440 0032 0021     		movs	r1, #0
 441 0034 0291     		str	r1, [sp, #8]
 174:Core/Src/main.c **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 442              		.loc 1 174 2 is_stmt 1 view .LVU124
 174:Core/Src/main.c **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 443              		.loc 1 174 34 is_stmt 0 view .LVU125
 444 0036 0391     		str	r1, [sp, #12]
 175:Core/Src/main.c **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /tmp/ccu2a7fG.s 			page 18


 445              		.loc 1 175 2 is_stmt 1 view .LVU126
 175:Core/Src/main.c **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 446              		.loc 1 175 35 is_stmt 0 view .LVU127
 447 0038 0491     		str	r1, [sp, #16]
 176:Core/Src/main.c **** 
 448              		.loc 1 176 2 is_stmt 1 view .LVU128
 176:Core/Src/main.c **** 
 449              		.loc 1 176 35 is_stmt 0 view .LVU129
 450 003a 0591     		str	r1, [sp, #20]
 178:Core/Src/main.c **** 	{
 451              		.loc 1 178 2 is_stmt 1 view .LVU130
 178:Core/Src/main.c **** 	{
 452              		.loc 1 178 6 is_stmt 0 view .LVU131
 453 003c 01A8     		add	r0, sp, #4
 454 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 455              	.LVL10:
 178:Core/Src/main.c **** 	{
 456              		.loc 1 178 5 view .LVU132
 457 0042 20B9     		cbnz	r0, .L36
 182:Core/Src/main.c **** 
 458              		.loc 1 182 1 view .LVU133
 459 0044 11B0     		add	sp, sp, #68
 460              	.LCFI8:
 461              		.cfi_remember_state
 462              		.cfi_def_cfa_offset 4
 463              		@ sp needed
 464 0046 5DF804FB 		ldr	pc, [sp], #4
 465              	.L35:
 466              	.LCFI9:
 467              		.cfi_restore_state
 167:Core/Src/main.c **** 	}
 468              		.loc 1 167 3 is_stmt 1 view .LVU134
 469 004a FFF7FEFF 		bl	Error_Handler
 470              	.LVL11:
 471              	.L36:
 180:Core/Src/main.c **** 	}
 472              		.loc 1 180 3 view .LVU135
 473 004e FFF7FEFF 		bl	Error_Handler
 474              	.LVL12:
 475              		.cfi_endproc
 476              	.LFE66:
 478              		.section	.text.main,"ax",%progbits
 479              		.align	1
 480              		.global	main
 481              		.syntax unified
 482              		.thumb
 483              		.thumb_func
 484              		.fpu softvfp
 486              	main:
 487              	.LFB65:
  51:Core/Src/main.c **** 	package received_package;
 488              		.loc 1 51 1 view -0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 16
 491              		@ frame_needed = 0, uses_anonymous_args = 0
 492 0000 00B5     		push	{lr}
 493              	.LCFI10:
ARM GAS  /tmp/ccu2a7fG.s 			page 19


 494              		.cfi_def_cfa_offset 4
 495              		.cfi_offset 14, -4
 496 0002 85B0     		sub	sp, sp, #20
 497              	.LCFI11:
 498              		.cfi_def_cfa_offset 24
  52:Core/Src/main.c **** 	unsigned long lidar_package;
 499              		.loc 1 52 2 view .LVU137
  53:Core/Src/main.c **** 	uint8_t command = 0;
 500              		.loc 1 53 2 view .LVU138
  54:Core/Src/main.c **** 
 501              		.loc 1 54 2 view .LVU139
 502              	.LVL13:
  57:Core/Src/main.c **** 
 503              		.loc 1 57 2 view .LVU140
 504 0004 FFF7FEFF 		bl	HAL_Init
 505              	.LVL14:
  60:Core/Src/main.c **** 
 506              		.loc 1 60 2 view .LVU141
 507 0008 FFF7FEFF 		bl	SystemClock_Config
 508              	.LVL15:
  63:Core/Src/main.c **** 	MX_CRC_Init();
 509              		.loc 1 63 2 view .LVU142
 510 000c FFF7FEFF 		bl	MX_GPIO_Init
 511              	.LVL16:
  64:Core/Src/main.c **** 	MX_I2C1_Init();
 512              		.loc 1 64 2 view .LVU143
 513 0010 FFF7FEFF 		bl	MX_CRC_Init
 514              	.LVL17:
  65:Core/Src/main.c **** 	MX_SPI1_Init();
 515              		.loc 1 65 2 view .LVU144
 516 0014 FFF7FEFF 		bl	MX_I2C1_Init
 517              	.LVL18:
  66:Core/Src/main.c **** 	MX_USART1_UART_Init();
 518              		.loc 1 66 2 view .LVU145
 519 0018 FFF7FEFF 		bl	MX_SPI1_Init
 520              	.LVL19:
  67:Core/Src/main.c **** 	tfmini_init();
 521              		.loc 1 67 2 view .LVU146
 522 001c FFF7FEFF 		bl	MX_USART1_UART_Init
 523              	.LVL20:
  68:Core/Src/main.c **** 
 524              		.loc 1 68 2 view .LVU147
 525 0020 FFF7FEFF 		bl	tfmini_init
 526              	.LVL21:
 527 0024 03E0     		b	.L39
 528              	.L41:
  75:Core/Src/main.c **** 		}
 529              		.loc 1 75 4 view .LVU148
  75:Core/Src/main.c **** 		}
 530              		.loc 1 75 23 is_stmt 0 view .LVU149
 531 0026 0549     		ldr	r1, .L42
 532 0028 6846     		mov	r0, sp
 533 002a FFF7FEFF 		bl	get_package
 534              	.LVL22:
  79:Core/Src/main.c **** 		{
 535              		.loc 1 79 3 is_stmt 1 view .LVU150
  82:Core/Src/main.c **** 
ARM GAS  /tmp/ccu2a7fG.s 			page 20


 536              		.loc 1 82 3 view .LVU151
  87:Core/Src/main.c **** 			case CMD_STATUS_CHECK:
 537              		.loc 1 87 3 view .LVU152
 145:Core/Src/main.c **** 	}
 538              		.loc 1 145 3 view .LVU153
  70:Core/Src/main.c **** 	{
 539              		.loc 1 70 8 view .LVU154
 540              	.L39:
  70:Core/Src/main.c **** 	{
 541              		.loc 1 70 2 view .LVU155
  73:Core/Src/main.c **** 		{
 542              		.loc 1 73 3 view .LVU156
  73:Core/Src/main.c **** 		{
 543              		.loc 1 73 7 is_stmt 0 view .LVU157
 544 002e 034B     		ldr	r3, .L42
 545 0030 1B68     		ldr	r3, [r3]
 546 0032 1B68     		ldr	r3, [r3]
  73:Core/Src/main.c **** 		{
 547              		.loc 1 73 6 view .LVU158
 548 0034 13F0200F 		tst	r3, #32
 549 0038 F9D0     		beq	.L39
 550 003a F4E7     		b	.L41
 551              	.L43:
 552              		.align	2
 553              	.L42:
 554 003c 00000000 		.word	.LANCHOR3
 555              		.cfi_endproc
 556              	.LFE65:
 558              		.global	address
 559              		.global	uart_out
 560              		.global	hspi1
 561              		.global	hi2c1
 562              		.global	hcrc
 563              		.section	.bss.hcrc,"aw",%nobits
 564              		.align	2
 565              		.set	.LANCHOR0,. + 0
 568              	hcrc:
 569 0000 00000000 		.space	8
 569      00000000 
 570              		.section	.bss.hi2c1,"aw",%nobits
 571              		.align	2
 572              		.set	.LANCHOR1,. + 0
 575              	hi2c1:
 576 0000 00000000 		.space	84
 576      00000000 
 576      00000000 
 576      00000000 
 576      00000000 
 577              		.section	.bss.hspi1,"aw",%nobits
 578              		.align	2
 579              		.set	.LANCHOR2,. + 0
 582              	hspi1:
 583 0000 00000000 		.space	88
 583      00000000 
 583      00000000 
 583      00000000 
 583      00000000 
ARM GAS  /tmp/ccu2a7fG.s 			page 21


 584              		.section	.bss.uart_out,"aw",%nobits
 585              		.align	2
 586              		.set	.LANCHOR3,. + 0
 589              	uart_out:
 590 0000 00000000 		.space	64
 590      00000000 
 590      00000000 
 590      00000000 
 590      00000000 
 591              		.section	.data.address,"aw"
 592              		.align	2
 595              	address:
 596 0000 01000000 		.word	1
 597              		.text
 598              	.Letext0:
 599              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 600              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 601              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 602              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 603              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 604              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 605              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 606              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 607              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_crc.h"
 608              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 609              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 610              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 611              		.file 15 "Core/Inc/package.h"
 612              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 613              		.file 17 "Core/Inc/tfmini.h"
 614              		.file 18 "<built-in>"
ARM GAS  /tmp/ccu2a7fG.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccu2a7fG.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccu2a7fG.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccu2a7fG.s:74     .text.MX_GPIO_Init:000000000000002c $d
     /tmp/ccu2a7fG.s:79     .text.Error_Handler:0000000000000000 $t
     /tmp/ccu2a7fG.s:86     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccu2a7fG.s:118    .text.MX_CRC_Init:0000000000000000 $t
     /tmp/ccu2a7fG.s:124    .text.MX_CRC_Init:0000000000000000 MX_CRC_Init
     /tmp/ccu2a7fG.s:155    .text.MX_CRC_Init:0000000000000014 $d
     /tmp/ccu2a7fG.s:161    .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/ccu2a7fG.s:167    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/ccu2a7fG.s:225    .text.MX_I2C1_Init:000000000000002c $d
     /tmp/ccu2a7fG.s:232    .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccu2a7fG.s:238    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccu2a7fG.s:306    .text.MX_SPI1_Init:0000000000000038 $d
     /tmp/ccu2a7fG.s:312    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccu2a7fG.s:318    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccu2a7fG.s:373    .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/ccu2a7fG.s:379    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccu2a7fG.s:386    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccu2a7fG.s:479    .text.main:0000000000000000 $t
     /tmp/ccu2a7fG.s:486    .text.main:0000000000000000 main
     /tmp/ccu2a7fG.s:554    .text.main:000000000000003c $d
     /tmp/ccu2a7fG.s:595    .data.address:0000000000000000 address
     /tmp/ccu2a7fG.s:589    .bss.uart_out:0000000000000000 uart_out
     /tmp/ccu2a7fG.s:582    .bss.hspi1:0000000000000000 hspi1
     /tmp/ccu2a7fG.s:575    .bss.hi2c1:0000000000000000 hi2c1
     /tmp/ccu2a7fG.s:568    .bss.hcrc:0000000000000000 hcrc
     /tmp/ccu2a7fG.s:564    .bss.hcrc:0000000000000000 $d
     /tmp/ccu2a7fG.s:571    .bss.hi2c1:0000000000000000 $d
     /tmp/ccu2a7fG.s:578    .bss.hspi1:0000000000000000 $d
     /tmp/ccu2a7fG.s:585    .bss.uart_out:0000000000000000 $d
     /tmp/ccu2a7fG.s:592    .data.address:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_CRC_Init
HAL_I2C_Init
HAL_SPI_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
tfmini_init
get_package
